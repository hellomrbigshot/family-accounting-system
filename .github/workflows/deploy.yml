name: Deploy to Aliyun

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: 安装 pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9.14.4
    
    - name: 使用 Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: 22.12.0
        cache: 'pnpm'
    
    - name: 安装依赖
      run: pnpm install
    
    - name: Build frontend
      run: |
        cd frontend
        pnpm run build
    
    - name: Build backend
      run: |
        cd backend
        pnpm run build
    
    - name: Deploy to Aliyun
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.ALIYUN_HOST }}
        username: ${{ secrets.ALIYUN_USERNAME }}
        key: ${{ secrets.ALIYUN_SSH_KEY }}
        script: |
          # 设置环境变量
          export NODE_ENV=production
          export MONGODB_URI=${{ secrets.MONGODB_URI }}
          export JWT_SECRET=${{ secrets.JWT_SECRET }}
          
          # 安装 pnpm（如果尚未安装）
          if ! command -v pnpm &> /dev/null; then
            echo "Installing pnpm..."
            curl -fsSL https://get.pnpm.io/install.sh | sh -
            export PNPM_HOME="$HOME/.local/share/pnpm"
            export PATH="$PNPM_HOME:$PATH"
          fi
          
          # 进入项目目录
          cd /home/family-accounting
          
          # 拉取最新代码
          git pull origin main
          pnpm install
          
          # 部署前端
          echo "Deploying frontend..."
          cd frontend
          pnpm run build
          
          # 部署后端
          echo "Deploying backend..."
          cd ../backend
          pnpm run build
          
          # 重启服务
          echo "Restarting services..."
          pm2 restart family-accounting || pm2 start ecosystem.config.js
          
          # 等待服务启动
          echo "Waiting for service to start..."
          sleep 10
          
          # 健康检查
          echo "Performing health check..."
          if curl -f http://localhost:3000/api/health; then
            echo "Deployment successful!"
          else
            echo "Health check failed!"
            exit 1
          fi 